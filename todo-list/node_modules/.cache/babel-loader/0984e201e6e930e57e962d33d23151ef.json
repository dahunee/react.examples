{"ast":null,"code":"import _objectSpread from \"C:\\\\Node React\\\\react_edu\\\\todo-list\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"C:\\\\Node React\\\\react_edu\\\\todo-list\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Node React\\\\react_edu\\\\todo-list\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Node React\\\\react_edu\\\\todo-list\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Node React\\\\react_edu\\\\todo-list\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Node React\\\\react_edu\\\\todo-list\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Node React\\\\react_edu\\\\todo-list\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Node React\\\\react_edu\\\\todo-list\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport PageTemplate from './PageTemplate/';\nimport TodoInput from './TodoInput';\nimport TodoList from './TodoList';\nvar initialTodos = new Array(500).fill(0).map(function (foo, index) {\n  return {\n    id: index,\n    text: \"\\uC77C\\uC815 \".concat(index),\n    done: false\n  };\n});\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      input: '',\n      // input 값\n      // 일정 데이터 초깃값\n      todos: initialTodos //일정 데이터 안에 들어가는 id 값\n\n    };\n    _this.id = 1;\n\n    _this.getId = function () {\n      return ++_this.id; // 현재 값에서 1을 더한 값을 반환\n    };\n\n    _this.handleChange = function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        input: value\n      });\n    };\n\n    _this.handleInsert = function () {\n      var _this$state = _this.state,\n          todos = _this$state.todos,\n          input = _this$state.input; // 새 데이터 객체 만들기\n\n      var newTodo = {\n        text: input,\n        done: false,\n        id: _this.getId()\n      }; // 배열 안에 새 데이터를 집어넣습니다.\n\n      _this.setState({\n        todos: [].concat(_toConsumableArray(todos), [newTodo]),\n        input: ''\n      });\n    };\n\n    _this.handleToggle = function (id) {\n      console.log('handleToggle'); // id로 배열의 인덱스를 찾습니다.\n\n      var todos = _this.state.todos;\n      var index = todos.findIndex(function (todo) {\n        return todo.id === id;\n      }); // 찾은 데이터의 done 값을 반전시킵니다.\n\n      var toggled = _objectSpread({}, todos[index], {\n        done: !todos[index].done\n      }); // slice를 사용하여 우리가 찾은 index 전후의 데이터들을 복사합니다.\n      // 그리고 그 사이에는 변경된 to do 객체를 넣어 줍니다.\n\n\n      _this.setState({\n        todos: [].concat(_toConsumableArray(todos.slice(0, index)), [toggled], _toConsumableArray(todos.slice(index + 1, todos.length)))\n      });\n    };\n\n    _this.handleRemove = function (id) {\n      console.log('handleRemove');\n      var todos = _this.state.todos;\n      var index = todos.findIndex(function (todo) {\n        return todo.id === id;\n      }); // slice로 전후 데이터들을 복사하고, 우리가 찾은 index는 제외시킵니다.\n\n      _this.setState({\n        todos: [].concat(_toConsumableArray(todos.slice(0, index)), _toConsumableArray(todos.slice(index + 1, todos.length)))\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          input = _this$state2.input,\n          todos = _this$state2.todos;\n      var handleChange = this.handleChange,\n          handleInsert = this.handleInsert,\n          handleToggle = this.handleToggle,\n          handleRemove = this.handleRemove;\n      return React.createElement(PageTemplate, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(TodoInput, {\n        onChange: handleChange,\n        onInsert: handleInsert,\n        value: input,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(TodoList, {\n        todos: todos,\n        onToggle: handleToggle,\n        onRemove: handleRemove,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Node React\\react_edu\\todo-list\\src\\components\\App.js"],"names":["React","Component","PageTemplate","TodoInput","TodoList","initialTodos","Array","fill","map","foo","index","id","text","done","App","state","input","todos","getId","handleChange","e","value","target","setState","handleInsert","newTodo","handleToggle","console","log","findIndex","todo","toggled","slice","length","handleRemove"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PageTemplate from './PageTemplate/';\r\nimport TodoInput from './TodoInput';\r\nimport TodoList from './TodoList';\r\n\r\nconst initialTodos = new Array(500).fill(0).map(\r\n    (foo, index) => ({id: index, text: `일정 ${index}`, done: false})\r\n);\r\n\r\nclass App extends Component {\r\n    state = {\r\n        input: '', // input 값\r\n        // 일정 데이터 초깃값\r\n        todos: initialTodos,\r\n    }\r\n    //일정 데이터 안에 들어가는 id 값\r\n    id = 1\r\n    getId = () => {\r\n        return ++this.id; // 현재 값에서 1을 더한 값을 반환\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { value } = e.target;\r\n        this.setState({\r\n            input: value\r\n        });\r\n    }\r\n    \r\n    // 새 데이터 추가\r\n    handleInsert = () => {\r\n        const { todos, input } = this.state;\r\n\r\n        // 새 데이터 객체 만들기\r\n        const newTodo = {\r\n            text: input,\r\n            done: false,\r\n            id: this.getId()\r\n        };\r\n\r\n        // 배열 안에 새 데이터를 집어넣습니다.\r\n        this.setState({\r\n            todos: [...todos, newTodo],\r\n            input: ''\r\n        })\r\n    }\r\n\r\n    // to do 아이템 토글하기\r\n    handleToggle = (id) => {\r\n        console.log('handleToggle');\r\n        // id로 배열의 인덱스를 찾습니다.\r\n        const { todos } = this.state;\r\n        const index = todos.findIndex(todo => todo.id === id);\r\n\r\n        // 찾은 데이터의 done 값을 반전시킵니다.\r\n        const toggled = {\r\n            ...todos[index],\r\n            done: !todos[index].done\r\n        };\r\n\r\n        // slice를 사용하여 우리가 찾은 index 전후의 데이터들을 복사합니다.\r\n        // 그리고 그 사이에는 변경된 to do 객체를 넣어 줍니다.\r\n        this.setState({\r\n            todos: [\r\n                ...todos.slice(0, index),\r\n                toggled,\r\n                ...todos.slice(index+1, todos.length)\r\n            ]\r\n        })\r\n    }\r\n\r\n    // 데이터 지우기\r\n    handleRemove = (id) => {\r\n        console.log('handleRemove');\r\n        const { todos } = this.state;\r\n        const index = todos.findIndex(todo => todo.id === id);\r\n\r\n        // slice로 전후 데이터들을 복사하고, 우리가 찾은 index는 제외시킵니다.\r\n        this.setState({\r\n            todos: [\r\n                ...todos.slice(0,index),\r\n                ...todos.slice(index+1,todos.length)\r\n            ]\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { input, todos } = this.state;\r\n        const {\r\n            handleChange,\r\n            handleInsert,\r\n            handleToggle,\r\n            handleRemove\r\n        } = this;\r\n\r\n        return (\r\n            <PageTemplate>\r\n                <TodoInput onChange={handleChange} onInsert={handleInsert} value={input}/>\r\n                <TodoList todos={todos} onToggle={handleToggle} onRemove={handleRemove}/>\r\n            </PageTemplate>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}