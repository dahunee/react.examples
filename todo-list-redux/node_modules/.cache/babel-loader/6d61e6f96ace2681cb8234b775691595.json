{"ast":null,"code":"import _classCallCheck from \"C:\\\\Node React\\\\React_Velopert\\\\todo-list-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Node React\\\\React_Velopert\\\\todo-list-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Node React\\\\React_Velopert\\\\todo-list-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Node React\\\\React_Velopert\\\\todo-list-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Node React\\\\React_Velopert\\\\todo-list-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Node React\\\\React_Velopert\\\\todo-list-redux\\\\src\\\\containers\\\\TodoInputContainer.js\";\nimport React, { Component } from 'react';\nimport TodoInput from '../components/TodoInput';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux'; // 액션 생성 함수들을 한꺼번에 불러옵니다.\n\nimport * as inputActions from '../modules/input';\nimport * as todosActions from '../modules/todos';\n\nvar TodoInputContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoInputContainer, _Component);\n\n  function TodoInputContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TodoInputContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TodoInputContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.id = 1;\n\n    _this.getId = function () {\n      return ++_this.id;\n    };\n\n    _this.handleChange = function (e) {\n      var value = e.target.value;\n      console.log(\"value :: \" + value);\n      console.log(\"this.props :: \" + _this.props); // 리듀서에서 정의한 함수를 사용하기 위해 this.props로 전달받는다.\n\n      var inputActions = _this.props.inputActions;\n      inputActions.setInput(value);\n    };\n\n    _this.handleInsert = function () {\n      var _this$props = _this.props,\n          inputActions = _this$props.inputActions,\n          TodosActions = _this$props.TodosActions,\n          value = _this$props.value;\n      var todo = {\n        id: _this.getId(),\n        text: value,\n        done: false\n      };\n      TodosActions.insert(todo);\n      inputActions.setInput('');\n    };\n\n    return _this;\n  }\n\n  _createClass(TodoInputContainer, [{\n    key: \"render\",\n    value: function render() {\n      var value = this.props.value;\n      var handleChange = this.handleChange,\n          handleInsert = this.handleInsert;\n      return React.createElement(TodoInput, {\n        onChange: handleChange,\n        onInsert: handleInsert,\n        value: value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return TodoInputContainer;\n}(Component);\n/* 이번에는 mapStateToProps와 mapDispatchToProps 함수에 대한 레퍼런스를\r\n   따로 만들지 않고, 그 내부에 바로 정의해 주었습니다.\r\n*/\n\n\nexport default connect(function (state) {\n  return {\n    value: state.input.get('value')\n  };\n}, function (dispatch) {\n  return {\n    /* bindActionCreators를 사용하면 자동으로 다음 작업들을 합니다.\r\n    {\r\n        actionCreator: (...params) => dispatch(actionCreator(...params))\r\n    }\r\n    그래서 이전에 우리가 했던 것처럼 일일이 dispatch할 필요가 없습니다.\r\n    예를 들어 InputActions에는 다음 작업이 되어 있는 것이죠.\r\n    InputActions: {\r\n        setInput: (value) => dispatch(inputActions.setInput(value))\r\n    }\r\n    나중에 이를 호출할 때는 this.props.InputActions.setInput을 호출하면 됩니다.\r\n    */\n    inputActions: bindActionCreators(inputActions, dispatch),\n    TodosActions: bindActionCreators(todosActions, dispatch)\n  };\n})(TodoInputContainer);","map":{"version":3,"sources":["C:\\Node React\\React_Velopert\\todo-list-redux\\src\\containers\\TodoInputContainer.js"],"names":["React","Component","TodoInput","connect","bindActionCreators","inputActions","todosActions","TodoInputContainer","id","getId","handleChange","e","value","target","console","log","props","setInput","handleInsert","TodosActions","todo","text","done","insert","state","input","get","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC,C,CAEA;;AACA,OAAO,KAAKC,YAAZ,MAA8B,kBAA9B;AACA,OAAO,KAAKC,YAAZ,MAA8B,kBAA9B;;IAEMC,kB;;;;;;;;;;;;;;;;;UACFC,E,GAAK,C;;UACLC,K,GAAQ,YAAM;AACV,aAAO,EAAE,MAAKD,EAAd;AACH,K;;UAEDE,Y,GAAe,UAACC,CAAD,EAAO;AAAA,UACVC,KADU,GACAD,CAAC,CAACE,MADF,CACVD,KADU;AAElBE,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAYH,KAAxB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAiB,MAAKC,KAAlC,EAHkB,CAIlB;;AAJkB,UAKVX,YALU,GAKO,MAAKW,KALZ,CAKVX,YALU;AAMlBA,MAAAA,YAAY,CAACY,QAAb,CAAsBL,KAAtB;AACH,K;;UAEDM,Y,GAAe,YAAM;AAAA,wBAC6B,MAAKF,KADlC;AAAA,UACTX,YADS,eACTA,YADS;AAAA,UACKc,YADL,eACKA,YADL;AAAA,UACmBP,KADnB,eACmBA,KADnB;AAEjB,UAAMQ,IAAI,GAAG;AACTZ,QAAAA,EAAE,EAAE,MAAKC,KAAL,EADK;AAETY,QAAAA,IAAI,EAAET,KAFG;AAGTU,QAAAA,IAAI,EAAE;AAHG,OAAb;AAKAH,MAAAA,YAAY,CAACI,MAAb,CAAoBH,IAApB;AACAf,MAAAA,YAAY,CAACY,QAAb,CAAsB,EAAtB;AACH,K;;;;;;;6BAEQ;AAAA,UACGL,KADH,GACa,KAAKI,KADlB,CACGJ,KADH;AAAA,UAEGF,YAFH,GAEkC,IAFlC,CAEGA,YAFH;AAAA,UAEiBQ,YAFjB,GAEkC,IAFlC,CAEiBA,YAFjB;AAGL,aACI,oBAAC,SAAD;AACI,QAAA,QAAQ,EAAER,YADd;AAEI,QAAA,QAAQ,EAAEQ,YAFd;AAGI,QAAA,KAAK,EAAEN,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAOH;;;;EApC4BX,S;AAuCjC;;;;;AAGA,eAAeE,OAAO,CAClB,UAACqB,KAAD;AAAA,SAAY;AACRZ,IAAAA,KAAK,EAAEY,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,OAAhB;AADC,GAAZ;AAAA,CADkB,EAIlB,UAACC,QAAD;AAAA,SAAe;AACX;;;;;;;;;;;AAWAtB,IAAAA,YAAY,EAAED,kBAAkB,CAACC,YAAD,EAAesB,QAAf,CAZrB;AAaXR,IAAAA,YAAY,EAAEf,kBAAkB,CAACE,YAAD,EAAeqB,QAAf;AAbrB,GAAf;AAAA,CAJkB,CAAP,CAmBbpB,kBAnBa,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport TodoInput from '../components/TodoInput';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\n// 액션 생성 함수들을 한꺼번에 불러옵니다.\r\nimport * as inputActions from '../modules/input';\r\nimport * as todosActions from '../modules/todos';\r\n\r\nclass TodoInputContainer extends Component {\r\n    id = 1\r\n    getId = () => {\r\n        return ++this.id;\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { value } = e.target;\r\n        console.log(\"value :: \"+value);\r\n        console.log(\"this.props :: \"+this.props);\r\n        // 리듀서에서 정의한 함수를 사용하기 위해 this.props로 전달받는다.\r\n        const { inputActions } = this.props; \r\n        inputActions.setInput(value);\r\n    }\r\n\r\n    handleInsert = () => {\r\n        const { inputActions, TodosActions, value } = this.props;\r\n        const todo = {\r\n            id: this.getId(),\r\n            text: value,\r\n            done: false\r\n        };\r\n        TodosActions.insert(todo);\r\n        inputActions.setInput('');\r\n    }\r\n\r\n    render() {\r\n        const { value } = this.props;\r\n        const { handleChange, handleInsert } = this;        \r\n        return (\r\n            <TodoInput\r\n                onChange={handleChange}\r\n                onInsert={handleInsert}\r\n                value={value}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n/* 이번에는 mapStateToProps와 mapDispatchToProps 함수에 대한 레퍼런스를\r\n   따로 만들지 않고, 그 내부에 바로 정의해 주었습니다.\r\n*/\r\nexport default connect(\r\n    (state) => ({\r\n        value: state.input.get('value')\r\n    }),\r\n    (dispatch) => ({\r\n        /* bindActionCreators를 사용하면 자동으로 다음 작업들을 합니다.\r\n        {\r\n            actionCreator: (...params) => dispatch(actionCreator(...params))\r\n        }\r\n        그래서 이전에 우리가 했던 것처럼 일일이 dispatch할 필요가 없습니다.\r\n        예를 들어 InputActions에는 다음 작업이 되어 있는 것이죠.\r\n        InputActions: {\r\n            setInput: (value) => dispatch(inputActions.setInput(value))\r\n        }\r\n        나중에 이를 호출할 때는 this.props.InputActions.setInput을 호출하면 됩니다.\r\n        */\r\n        inputActions: bindActionCreators(inputActions, dispatch),\r\n        TodosActions: bindActionCreators(todosActions, dispatch)\r\n    })\r\n)(TodoInputContainer);"]},"metadata":{},"sourceType":"module"}